import java.util.ArrayList;
import java.util.List;

class Aluno {
    private String nome;
    private int idade;
    private List<String> tecnologiasAprendidas;

    public Aluno(String nome, int idade) {
        this.nome = nome;
        this.idade = idade;
        this.tecnologiasAprendidas = new ArrayList<>();
    }

    public String getNome() {
        return nome;
    }

    public int getIdade() {
        return idade;
    }

    public void aprenderTecnologia(String tecnologia) {
        tecnologiasAprendidas.add(tecnologia);
    }

    public void mostrarTecnologiasAprendidas() {
        System.out.println("Tecnologias aprendidas por " + nome + ":");
        for (String tecnologia : tecnologiasAprendidas) {
            System.out.println("- " + tecnologia);
        }
    }
}

class Instrutor {
    private String nome;
    private List<String> tecnologiasEnsinadas;

    public Instrutor(String nome) {
        this.nome = nome;
        this.tecnologiasEnsinadas = new ArrayList<>();
    }

    public String getNome() {
        return nome;
    }

    public void ensinarTecnologia(String tecnologia) {
        tecnologiasEnsinadas.add(tecnologia);
    }

    public void mostrarTecnologiasEnsinadas() {
        System.out.println("Tecnologias ensinadas por " + nome + ":");
        for (String tecnologia : tecnologiasEnsinadas) {
            System.out.println("- " + tecnologia);
        }
    }
}

class Bootcamp {
    private String nome;
    private Instrutor instrutor;
    private List<Aluno> alunos;

    public Bootcamp(String nome, Instrutor instrutor) {
        this.nome = nome;
        this.instrutor = instrutor;
        this.alunos = new ArrayList<>();
    }

    public void adicionarAluno(Aluno aluno) {
        alunos.add(aluno);
    }

    public void iniciarBootcamp() {
        System.out.println("Iniciando bootcamp " + nome);
        instrutor.mostrarTecnologiasEnsinadas();
        for (Aluno aluno : alunos) {
            System.out.println("Aluno " + aluno.getNome() + " (" + aluno.getIdade() + " anos) está participando:");
            instrutor.mostrarTecnologiasEnsinadas();
            aluno.mostrarTecnologiasAprendidas();
            System.out.println();
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Instrutor instrutor = new Instrutor("João");
        instrutor.ensinarTecnologia("Java");
        instrutor.ensinarTecnologia("Spring Boot");

        Aluno aluno1 = new Aluno("Maria", 20);
        aluno1.aprenderTecnologia("Java");

        Aluno aluno2 = new Aluno("Pedro", 22);
        aluno2.aprenderTecnologia("Spring Boot");

        Bootcamp bootcamp = new Bootcamp("Bootcamp de Programação", instrutor);
        bootcamp.adicionarAluno(aluno1);
        bootcamp.adicionarAluno(aluno2);

        bootcamp.iniciarBootcamp();
    }
}
